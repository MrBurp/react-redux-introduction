{"ast":null,"code":"import _defineProperty from \"/Users/andreasziegler/Desktop/2019/react/react-redux-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/andreasziegler/Desktop/2019/react/react-redux-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from \"redux\";\nimport * as actions from \"../actions/index\";\nimport uuid from \"uuid/v4\";\n\nfunction filter() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : actions.filters.ALL;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.SET_FILTER:\n      return action.filter;\n\n    default:\n      return state;\n  }\n}\n\nfunction toDoItems() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.ADD_TODO:\n      var id = uuid();\n      return _objectSpread({}, state, _defineProperty({}, id, {\n        uuid: id,\n        text: action.text,\n        done: false\n      }));\n\n    case actions.UPDATE_TODO_TEXT:\n      return _objectSpread({}, state, _defineProperty({}, action.uuid, _objectSpread({}, state[action.uuid], {\n        text: action.text\n      })));\n\n    case actions.TOGGLE_TODO:\n      return _objectSpread({}, state, _defineProperty({}, action.uuid, _objectSpread({}, state[action.uuid], {\n        done: !state[action.uuid].done\n      })));\n\n    case actions.REMOVE_TODO:\n      var nextState = _objectSpread({}, state);\n\n      delete nextState[action.uuid];\n      return nextState;\n\n    default:\n      return state;\n  }\n}\n\nvar appReducer = combineReducers({\n  filter: filter,\n  toDoItems: toDoItems\n});\nexport default appReducer;","map":{"version":3,"sources":["/Users/andreasziegler/Desktop/2019/react/react-redux-introduction/src/reducers/index.js"],"names":["combineReducers","actions","uuid","filter","state","filters","ALL","action","type","SET_FILTER","toDoItems","ADD_TODO","id","text","done","UPDATE_TODO_TEXT","TOGGLE_TODO","REMOVE_TODO","nextState","appReducer"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,SAASC,MAAT,GAAqD;AAAA,MAArCC,KAAqC,uEAA7BH,OAAO,CAACI,OAAR,CAAgBC,GAAa;AAAA,MAARC,MAAQ;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAO,CAACQ,UAAb;AACE,aAAOF,MAAM,CAACJ,MAAd;;AACF;AACE,aAAOC,KAAP;AAJJ;AAMD;;AAED,SAASM,SAAT,GAAuC;AAAA,MAApBN,KAAoB,uEAAZ,EAAY;AAAA,MAARG,MAAQ;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAO,CAACU,QAAb;AACE,UAAMC,EAAE,GAAGV,IAAI,EAAf;AAEA,+BACKE,KADL,sBAEGQ,EAFH,EAEQ;AACJV,QAAAA,IAAI,EAAEU,EADF;AAEJC,QAAAA,IAAI,EAAEN,MAAM,CAACM,IAFT;AAGJC,QAAAA,IAAI,EAAE;AAHF,OAFR;;AAQF,SAAKb,OAAO,CAACc,gBAAb;AACE,+BACKX,KADL,sBAEGG,MAAM,CAACL,IAFV,oBAGOE,KAAK,CAACG,MAAM,CAACL,IAAR,CAHZ;AAIIW,QAAAA,IAAI,EAAEN,MAAM,CAACM;AAJjB;;AAOF,SAAKZ,OAAO,CAACe,WAAb;AACE,+BACKZ,KADL,sBAEGG,MAAM,CAACL,IAFV,oBAGOE,KAAK,CAACG,MAAM,CAACL,IAAR,CAHZ;AAIIY,QAAAA,IAAI,EAAE,CAACV,KAAK,CAACG,MAAM,CAACL,IAAR,CAAL,CAAmBY;AAJ9B;;AAOF,SAAKb,OAAO,CAACgB,WAAb;AACE,UAAIC,SAAS,qBAAQd,KAAR,CAAb;;AACA,aAAOc,SAAS,CAACX,MAAM,CAACL,IAAR,CAAhB;AAEA,aAAOgB,SAAP;;AACF;AACE,aAAOd,KAAP;AAlCJ;AAoCD;;AACD,IAAMe,UAAU,GAAGnB,eAAe,CAAC;AACjCG,EAAAA,MAAM,EAANA,MADiC;AAEjCO,EAAAA,SAAS,EAATA;AAFiC,CAAD,CAAlC;AAKA,eAAeS,UAAf","sourcesContent":["import { combineReducers } from \"redux\";\nimport * as actions from \"../actions/index\";\nimport uuid from \"uuid/v4\";\n\nfunction filter(state = actions.filters.ALL, action) {\n  switch (action.type) {\n    case actions.SET_FILTER:\n      return action.filter;\n    default:\n      return state;\n  }\n}\n\nfunction toDoItems(state = {}, action) {\n  switch (action.type) {\n    case actions.ADD_TODO:\n      const id = uuid();\n\n      return {\n        ...state,\n        [id]: {\n          uuid: id,\n          text: action.text,\n          done: false\n        }\n      };\n    case actions.UPDATE_TODO_TEXT:\n      return {\n        ...state,\n        [action.uuid]: {\n          ...state[action.uuid],\n          text: action.text\n        }\n      };\n    case actions.TOGGLE_TODO:\n      return {\n        ...state,\n        [action.uuid]: {\n          ...state[action.uuid],\n          done: !state[action.uuid].done\n        }\n      };\n    case actions.REMOVE_TODO:\n      let nextState = { ...state };\n      delete nextState[action.uuid];\n\n      return nextState;\n    default:\n      return state;\n  }\n}\nconst appReducer = combineReducers({\n  filter,\n  toDoItems\n});\n\nexport default appReducer;\n"]},"metadata":{},"sourceType":"module"}